clinical <- select(clinical,-X)
aorta <- select(aorta, Anon = patient.bl, everything())
#print(head(aorta))
# this will merge two dataframes on common column "Anon"
clinical.aorta <- merge(clinical, aorta)
clinical.aorta <- subset(clinical.aorta, select = -c(Anon))
clinical <- subset(clinical, select = -c(Anon))
# drop negative lya.decrease's!
#row_to_keep <- which(clinical.aorta$lya.decrease > 0)
clinical.aorta <- subset(clinical.aorta, lya.decrease >= 0)
# conversion to matrix causes "lasso" to fail!
#clinical.aorta <- as.matrix(clinical.aorta)
print(class(clinical.aorta))
print(any(is.na(clinical.aorta)))
print(any(!is.numeric(clinical.aorta)))
# you have to provide both set.seed() AND  seed internally to caret, total of 10*3*tuneLength+1
set.seed(43)
seed <- 43
#my.seeds <- list(837, 692, 246, 34, 132, 886, 111, 54, 55, 798,
#                 117, 492, 242, 89, 152, 806, 112, 13, 12, 708,
#                 636, 611, 446, 14, 112, 876, 763, 53, 50, 11, 101)
control <- trainControl(method="repeatedcv", number=10, repeats=3) # seeds=my.seeds
# available metrics for regression Rsquared, RMSE, R2
metric <- "Rsquared"
preProcess=c("center", "scale")
# Generalized Linear Model (method = 'glm')
set.seed(seed)
# Stochastic Gradient Boosting (method = 'gbm')
set.seed(seed)
fit.lm <- train(lya.decrease~., data=clinical.aorta, method="lm", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
fit.gbm <- train(lya.decrease~., data=clinical.aorta, method="gbm", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Bayesian Generalized Linear Model (method = 'bayesglm')
set.seed(seed)
fit.brnn <- train(lya.decrease~., data=clinical.aorta, method="brnn", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Neural Network (method = 'nnet')
set.seed(seed)
fit.nnet <- train(lya.decrease~., data=clinical.aorta, method="nnet", metric=metric,
preProc=c("center", "scale"), trControl=control, verbose=FALSE)
#fit.nnet <- train(lya.decrease~., data=clinical.aorta, method="pcaNNet", metric=metric,
#                 preProc=c("center", "scale"), trControl=control, verbose=FALSE)
set.seed(seed)
fit.rf <- train(lya.decrease~., data=clinical.aorta, method="rf", metric=metric,
preProc=c("center", "scale"), trControl=control, verbose=FALSE)
# Ridge Regression (method = 'lasso')
set.seed(seed)
#fit.lasso <- train(lya.decrease~., data=clinical.aorta, method="lasso", metric=metric,
#                    preProc=c("center", "scale"), trControl=control)
fit.lasso <- train(lya.decrease~ ., data=clinical.aorta, method="lasso", metric=metric,
preProc=c("center", "scale"), trControl=control)
results <- resamples(list(lm=fit.lm, gbm=fit.gbm, brnn=fit.brnn, nnet=fit.nnet, rf=fit.rf,
lasso=fit.lasso))
# Table comparison
summary(results)
# final lasso coefficients, gives results for different shrinkage parameters
predict(fit.lasso$finalModel, type = 'coefficients', s=fit.lasso$bestTune$fraction, mode='fraction')
fit.lasso$finalModel$lambda
# boxplot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-1-gv.pdf")
#boxplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# Dot-plot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-2-gv.pdf")
#dotplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# plot variable importance
pdf("/home/ef2p/Kaggle/lymphopenia/figures/rt_a_nnet_varImp-2.pdf")
plot(varImp(fit.nnet), main='nnet Model Parameters: Great Vessels')
dev.off()
#
residuals<-resid(fit.nnet)
predictedValues<-predict(fit.nnet)
plot(clinical.aorta$lya.decrease,residuals)
abline(0,0)
plot(clinical.aorta$lya.decrease,predictedValues, main="Residuals vs Lymphocite Decrease: nnet")
#
pl1 <- ggplot(clinical.aorta, aes(x = lya.decrease, y = predictedValues))
pl1 <- pl1 + geom_point(color = 'red', alpha = 0.4)
dev.off()
#dev.off()
# Dot-plot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-2-gv.pdf")
#dotplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# plot variable importance
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/rt_a_nnet_varImp-2.pdf")
#plot(varImp(fit.nnet), main='nnet Model Parameters: Great Vessels')
#dev.off()
#
residuals<-resid(fit.nnet)
#devtools::install_github('cran/ggplot2')
library(ggplot2)
library(e1071)
library(mlbench)
library(caret)
library(gbm)
library(dplyr)
library(ggthemes)
library(corrplot)
library(corrgram)
library(Amelia)
library(Hmisc) # correlation matrix with significance levels
# new, extend-ed
clinical <- read.csv("/home/ef2p/Kaggle/lymphopenia/input/expand2/clinical-2.csv")
aorta <- read.csv("/home/ef2p/Kaggle/lymphopenia/input/expand2/blood.csv")
# drop the index in clinical dataframe
clinical <- select(clinical,-X)
aorta <- select(aorta, Anon = patient.bl, everything())
#print(head(aorta))
# this will merge two dataframes on common column "Anon"
clinical.aorta <- merge(clinical, aorta)
clinical.aorta <- subset(clinical.aorta, select = -c(Anon))
clinical <- subset(clinical, select = -c(Anon))
# drop negative lya.decrease's!
#row_to_keep <- which(clinical.aorta$lya.decrease > 0)
clinical.aorta <- subset(clinical.aorta, lya.decrease >= 0)
# conversion to matrix causes "lasso" to fail!
#clinical.aorta <- as.matrix(clinical.aorta)
print(class(clinical.aorta))
print(any(is.na(clinical.aorta)))
print(any(!is.numeric(clinical.aorta)))
# you have to provide both set.seed() AND  seed internally to caret, total of 10*3*tuneLength+1
set.seed(43)
seed <- 43
#my.seeds <- list(837, 692, 246, 34, 132, 886, 111, 54, 55, 798,
#                 117, 492, 242, 89, 152, 806, 112, 13, 12, 708,
#                 636, 611, 446, 14, 112, 876, 763, 53, 50, 11, 101)
control <- trainControl(method="repeatedcv", number=10, repeats=3) # seeds=my.seeds
# available metrics for regression Rsquared, RMSE, R2
metric <- "Rsquared"
preProcess=c("center", "scale")
# Generalized Linear Model (method = 'glm')
set.seed(seed)
fit.lm <- train(lya.decrease~., data=clinical.aorta, method="lm", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Stochastic Gradient Boosting (method = 'gbm')
set.seed(seed)
fit.gbm <- train(lya.decrease~., data=clinical.aorta, method="gbm", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Bayesian Generalized Linear Model (method = 'bayesglm')
set.seed(seed)
fit.brnn <- train(lya.decrease~., data=clinical.aorta, method="brnn", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Neural Network (method = 'nnet')
set.seed(seed)
fit.nnet <- train(lya.decrease~., data=clinical.aorta, method="nnet", metric=metric,
preProc=c("center", "scale"), trControl=control, verbose=FALSE)
#fit.nnet <- train(lya.decrease~., data=clinical.aorta, method="pcaNNet", metric=metric,
#                 preProc=c("center", "scale"), trControl=control, verbose=FALSE)
set.seed(seed)
fit.rf <- train(lya.decrease~., data=clinical.aorta, method="rf", metric=metric,
preProc=c("center", "scale"), trControl=control, verbose=FALSE)
# Ridge Regression (method = 'lasso')
set.seed(seed)
#fit.lasso <- train(lya.decrease~., data=clinical.aorta, method="lasso", metric=metric,
#                    preProc=c("center", "scale"), trControl=control)
fit.lasso <- train(lya.decrease~ ., data=clinical.aorta, method="lasso", metric=metric,
preProc=c("center", "scale"), trControl=control)
results <- resamples(list(lm=fit.lm, gbm=fit.gbm, brnn=fit.brnn, nnet=fit.nnet, rf=fit.rf,
lasso=fit.lasso))
# Table comparison
summary(results)
# final lasso coefficients, gives results for different shrinkage parameters
predict(fit.lasso$finalModel, type = 'coefficients', s=fit.lasso$bestTune$fraction, mode='fraction')
fit.lasso$finalModel$lambda
#dev.off()
# Dot-plot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-2-gv.pdf")
#dotplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# plot variable importance
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/rt_a_nnet_varImp-2.pdf")
#plot(varImp(fit.nnet), main='nnet Model Parameters: Great Vessels')
#dev.off()
#
residuals<-resid(fit.nnet)
predictedValues<-predict(fit.nnet)
plot(clinical.aorta$lya.decrease,residuals)
abline(0,0)
plot(clinical.aorta$lya.decrease,predictedValues, main="Residuals vs Lymphocite Decrease: nnet")
#devtools::install_github('cran/ggplot2')
library(ggplot2)
library(e1071)
library(mlbench)
library(caret)
library(gbm)
library(dplyr)
library(ggthemes)
library(corrgram)
library(corrplot)
library(Amelia)
library(Hmisc) # correlation matrix with significance levels
# new, extend-ed
clinical <- read.csv("/home/ef2p/Kaggle/lymphopenia/input/expand2/clinical-2.csv")
aorta <- read.csv("/home/ef2p/Kaggle/lymphopenia/input/expand2/aorta.csv")
# drop the index in clinical dataframe
clinical <- select(clinical,-X)
aorta <- select(aorta, Anon = patient.ao, everything())
#print(head(aorta))
# this will merge two dataframes on common column "Anon"
clinical.aorta <- merge(clinical, aorta)
clinical.aorta <- subset(clinical.aorta, select = -c(Anon))
clinical <- subset(clinical, select = -c(Anon))
# drop negative lya.decrease's!
#row_to_keep <- which(clinical.aorta$lya.decrease > 0)
clinical.aorta <- subset(clinical.aorta, lya.decrease >= 0)
# conversion to matrix causes "lasso" to fail!
#clinical.aorta <- as.matrix(clinical.aorta)
print(class(clinical.aorta))
print(any(is.na(clinical.aorta)))
print(any(!is.numeric(clinical.aorta)))
# you have to provide both set.seed() AND  seed internally to caret, total of 10*3*tuneLength+1
set.seed(43)
seed <- 43
#my.seeds <- list(837, 692, 246, 34, 132, 886, 111, 54, 55, 798,
#                 117, 492, 242, 89, 152, 806, 112, 13, 12, 708,
#                 636, 611, 446, 14, 112, 876, 763, 53, 50, 11, 101)
control <- trainControl(method="repeatedcv", number=10, repeats=3) # seeds=my.seeds
# available metrics for regression Rsquared, RMSE, R2
metric <- "Rsquared"
preProcess=c("center", "scale")
fit.lm <- train(lya.decrease~., data=clinical.aorta, method="lm", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Generalized Linear Model (method = 'glm')
set.seed(seed)
# Stochastic Gradient Boosting (method = 'gbm')
set.seed(seed)
fit.gbm <- train(lya.decrease~., data=clinical.aorta, method="gbm", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Bayesian Generalized Linear Model (method = 'bayesglm')
set.seed(seed)
fit.brnn <- train(lya.decrease~., data=clinical.aorta, method="brnn", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Neural Network (method = 'nnet')
set.seed(seed)
fit.nnet <- train(lya.decrease~., data=clinical.aorta, method="nnet", metric=metric,
preProc=c("center", "scale"), trControl=control, verbose=FALSE)
#fit.nnet <- train(lya.decrease~., data=clinical.aorta, method="pcaNNet", metric=metric,
#                 preProc=c("center", "scale"), trControl=control, verbose=FALSE)
set.seed(seed)
fit.rf <- train(lya.decrease~., data=clinical.aorta, method="rf", metric=metric,
preProc=c("center", "scale"), trControl=control, verbose=FALSE)
# Ridge Regression (method = 'lasso')
set.seed(seed)
#fit.lasso <- train(lya.decrease~., data=clinical.aorta, method="lasso", metric=metric,
#                    preProc=c("center", "scale"), trControl=control)
fit.lasso <- train(lya.decrease~ int.dose.bl+volume.bl, data=clinical.aorta, method="lasso", metric=metric,
preProc=c("center", "scale"), trControl=control)
results <- resamples(list(lm=fit.lm, gbm=fit.gbm, brnn=fit.brnn, nnet=fit.nnet, rf=fit.rf,
lasso=fit.lasso))
# Table comparison
summary(results)
# final lasso coefficients, gives results for different shrinkage parameters
predict(fit.lasso$finalModel, type = 'coefficients', s=fit.lasso$bestTune$fraction, mode='fraction')
fit.lasso$finalModel$lambda
# boxplot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-1-gv.pdf")
#boxplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# Dot-plot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-2-gv.pdf")
#dotplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# plot variable importance
pdf("/home/ef2p/Kaggle/lymphopenia/figures/rt_a_lasso_varImp-2.pdf")
plot(varImp(fit.lasso), main='lasso Model Parameters: Great Vessels')
dev.off()
#
residuals<-resid(fit.lasso)
predictedValues<-predict(fit.lasso)
plot(clinical.aorta$lya.decrease,residuals)
abline(0,0)
plot(clinical.aorta$lya.decrease,predictedValues, main="Residuals vs Lymphocite Decrease: lasso")
#
pl1 <- ggplot(clinical.aorta, aes(x = lya.decrease, y = predictedValues))
pl1 <- pl1 + geom_point(color = 'red', alpha = 0.4)
pl1 <- pl1 + theme_bw() + geom_smooth( color = 'blue' )
pl1 <- pl1 +
labs(title="Lymphocyte Decrease ~ Int Dose: Great Vessels",
subtitle="lasso Model: 76 Observations, lya.decrease > 0")
pdf("/home/ef2p/Kaggle/lymphopenia/figures/lasso-pred-gv-2.pdf")
print(pl1)
dev.off()
# Grab residuals
#res <- residuals(model)
# Convert to DataFrame for gglpot
res <- as.data.frame(residuals)
print(head(res))
# Histogram of residuals for lm
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pdf("/home/ef2p/Kaggle/lymphopenia/figures/lasso-res-gv-2.pdf")
#std <- sd(residuals)
print(pl9)
dev.off()
print(sd(residuals)) # sd = 0.44
#devtools::install_github('cran/ggplot2')
library(ggplot2)
library(e1071)
library(mlbench)
library(caret)
library(gbm)
library(dplyr)
library(ggthemes)
library(corrplot)
library(corrgram)
library(Amelia)
library(Hmisc) # correlation matrix with significance levels
# new, extend-ed
clinical <- read.csv("/home/ef2p/Kaggle/lymphopenia/input/expand2/clinical-2.csv")
aorta <- read.csv("/home/ef2p/Kaggle/lymphopenia/input/expand2/blood.csv")
# drop the index in clinical dataframe
clinical <- select(clinical,-X)
aorta <- select(aorta, Anon = patient.bl, everything())
#print(head(aorta))
# this will merge two dataframes on common column "Anon"
clinical.aorta <- merge(clinical, aorta)
clinical.aorta <- subset(clinical.aorta, select = -c(Anon))
clinical <- subset(clinical, select = -c(Anon))
# drop negative lya.decrease's!
#row_to_keep <- which(clinical.aorta$lya.decrease > 0)
clinical.aorta <- subset(clinical.aorta, lya.decrease >= 0)
# conversion to matrix causes "lasso" to fail!
#clinical.aorta <- as.matrix(clinical.aorta)
print(class(clinical.aorta))
print(any(is.na(clinical.aorta)))
print(any(!is.numeric(clinical.aorta)))
# you have to provide both set.seed() AND  seed internally to caret, total of 10*3*tuneLength+1
set.seed(43)
seed <- 43
#my.seeds <- list(837, 692, 246, 34, 132, 886, 111, 54, 55, 798,
#                 117, 492, 242, 89, 152, 806, 112, 13, 12, 708,
#                 636, 611, 446, 14, 112, 876, 763, 53, 50, 11, 101)
control <- trainControl(method="repeatedcv", number=10, repeats=3) # seeds=my.seeds
# available metrics for regression Rsquared, RMSE, R2
metric <- "Rsquared"
preProcess=c("center", "scale")
# Generalized Linear Model (method = 'glm')
set.seed(seed)
fit.lm <- train(lya.decrease~., data=clinical.aorta, method="lm", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Stochastic Gradient Boosting (method = 'gbm')
set.seed(seed)
fit.gbm <- train(lya.decrease~., data=clinical.aorta, method="gbm", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Bayesian Generalized Linear Model (method = 'bayesglm')
set.seed(seed)
fit.brnn <- train(lya.decrease~., data=clinical.aorta, method="brnn", metric=metric,
preProc=c("center", "scale"), trControl=control, tuneLength=3, verbose=FALSE)
# Neural Network (method = 'nnet')
set.seed(seed)
fit.nnet <- train(lya.decrease~., data=clinical.aorta, method="nnet", metric=metric,
preProc=c("center", "scale"), trControl=control, verbose=FALSE)
#fit.nnet <- train(lya.decrease~., data=clinical.aorta, method="pcaNNet", metric=metric,
#                 preProc=c("center", "scale"), trControl=control, verbose=FALSE)
set.seed(seed)
fit.rf <- train(lya.decrease~., data=clinical.aorta, method="rf", metric=metric,
preProc=c("center", "scale"), trControl=control, verbose=FALSE)
# Ridge Regression (method = 'lasso')
set.seed(seed)
#fit.lasso <- train(lya.decrease~., data=clinical.aorta, method="lasso", metric=metric,
#                    preProc=c("center", "scale"), trControl=control)
fit.lasso <- train(lya.decrease~ int.dose.bl+volume.bl, data=clinical.aorta, method="lasso", metric=metric,
preProc=c("center", "scale"), trControl=control)
results <- resamples(list(lm=fit.lm, gbm=fit.gbm, brnn=fit.brnn, nnet=fit.nnet, rf=fit.rf,
lasso=fit.lasso))
# Table comparison
summary(results)
# final lasso coefficients, gives results for different shrinkage parameters
predict(fit.lasso$finalModel, type = 'coefficients', s=fit.lasso$bestTune$fraction, mode='fraction')
fit.lasso$finalModel$lambda
# boxplot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-1-gv.pdf")
#boxplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# Dot-plot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-2-gv.pdf")
#dotplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# plot variable importance
pdf("/home/ef2p/Kaggle/lymphopenia/figures/rt_a_nnet_varImp-2.pdf")
plot(varImp(fit.nnet), main='lasso Model Parameters: Great Vessels')
dev.off()
#
residuals<-resid(fit.nnet)
predictedValues<-predict(fit.nnet)
plot(clinical.aorta$lya.decrease,residuals)
abline(0,0)
plot(clinical.aorta$lya.decrease,predictedValues, main="Residuals vs Lymphocite Decrease: nnet")
#
pl1 <- ggplot(clinical.aorta, aes(x = lya.decrease, y = predictedValues))
pl1 <- pl1 + geom_point(color = 'red', alpha = 0.4)
pl1 <- pl1 + theme_bw() + geom_smooth( color = 'blue' )
pl1 <- pl1 +
labs(title="Lymphocyte Decrease ~ LYA Predicted Values: Great Vessels",
subtitle="nnet Model: 76 Observations, lya.decrease > 0")
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-pred-gv-2.pdf")
print(pl1)
dev.off()
# Grab residuals
#res <- residuals(model)
# Convert to DataFrame for gglpot
res <- as.data.frame(residuals)
print(head(res))
# Histogram of residuals for nnet
pl9 <- ggplot(res,aes(V1)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-gv-1.pdf")
print(pl9)
# Histogram of residuals for lm
#pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
#                                             fill='blue',alpha=0.5) + labs( x='residuals')
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/lasso-res-gv-2.pdf")
#std <- sd(residuals)
#print(pl9)
#dev.off()
print(sd(residuals)) # sd = 0.44
pl9 <- ggplot(res,aes(V1)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-gv-2.pdf")
print(pl9)\
pl9 <- ggplot(res,aes(V1)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-gv-2.pdf")
print(pl9)
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-gv-2.pdf")
print(pl9)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-gv-2.pdf")
print(pl9)
dev.off()
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
print(pl9)
print(residuals)
source('~/Kaggle/lymphopenia/R/regression-examples.R')
source('~/Kaggle/lymphopenia/R/regression-examples.R')
source('~/Kaggle/lymphopenia/R/regression-examples.R')
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
print(pl9)
print(residuals)
print(sd(residuals))
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-ao-3.pdf")\
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-ao-3.pdf")
print(pl9)
dev.off()
source('~/Kaggle/lymphopenia/R/regression-examples.R')
#dev.off()
# Dot-plot comparison
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/model_eval-2-gv.pdf")
#dotplot(results, main='Regression Model Comparison: Great Vessels')
#dev.off()
# plot variable importance
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/rt_a_nnet_varImp-2.pdf")
#plot(varImp(fit.nnet), main='lasso Model Parameters: Aorta')
#dev.off()
#
residuals<-resid(fit.nnet)
predictedValues<-predict(fit.nnet)
plot(clinical.aorta$lya.decrease,residuals)
abline(0,0)
plot(clinical.aorta$lya.decrease,predictedValues, main="Residuals vs Lymphocite Decrease: nnet")
#
pl1 <- ggplot(clinical.aorta, aes(x = lya.decrease, y = predictedValues))
pl1 <- pl1 + geom_point(color = 'red', alpha = 0.4)
pl1 <- pl1 + theme_bw() + geom_smooth( color = 'blue' )
pl1 <- pl1 +
labs(title="Lymphocyte Decrease ~ LYA Predicted Values: Great Vessels",
subtitle="nnet Model: 76 Observations, lya.decrease > 0")
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-pred-gv-2.pdf")
print(pl1)
dev.off()
# Grab residuals
#res <- residuals(model)
# Convert to DataFrame for gglpot
res <- as.data.frame(residuals)
print(head(res))
# Histogram of residuals for nnet
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-gv-2.pdf")
print(pl9)
# Histogram of residuals for lm
#pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
#                                             fill='blue',alpha=0.5) + labs( x='residuals')
#pdf("/home/ef2p/Kaggle/lymphopenia/figures/lasso-res-gv-2.pdf")
#std <- sd(residuals)
#print(pl9)
#dev.off()
print(sd(residuals)) # sd = 0.44
pl9 <- ggplot(res,aes(residuals)) +  geom_histogram(binwidth=0.10,
fill='blue',alpha=0.5) + labs( x='residuals')
pdf("/home/ef2p/Kaggle/lymphopenia/figures/nnet-res-gv-2.pdf")
print(pl9)
dev.off()
